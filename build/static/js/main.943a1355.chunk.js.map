{"version":3,"sources":["Player.tsx","Header.tsx","App.tsx","index.tsx"],"names":["Player","props","state","isDrafted","info","isdrafted","currentIsDrafted","this","requestOptions","method","headers","body","JSON","stringify","id","playerid","team","fetch","then","res","text","console","log","catch","error","setState","draft","check","buttonclass","className","playername","pos","school","onClick","callAPI","React","Component","Header","App","apiResponse","onClock","up","pick","teams","players","results","json","window","location","reload","player","push","sortedList","sort","a","b","newDraft","map","value","index","key","bind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.943a1355.chunk.js","sourcesContent":["import React from 'react';\nimport PlayerInfo from './PlayerInfo';\nimport \"./App.css\"\nimport App from './App'\n\ninterface IProps {\n    key: number;\n    info: PlayerInfo;\n    draft: any;\n    team : number;\n}\n\ninterface IState {\n    isDrafted: boolean;\n}\n\nclass Player extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n        this.state = { isDrafted: this.props.info.isdrafted };\n    }\n\n    // componentDidMount() {\n    //     fetch(\"http://localhost:9000/\" + this.props.info.playerid)\n    //         .then(res => res.json())\n    //         .then(json => this.setState({ isDrafted: json.isdrafted }));\n    // }\n\n    callAPI() {\n        const currentIsDrafted: boolean = this.state.isDrafted;\n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json' \n            },\n            body: JSON.stringify({ id: this.props.info.playerid, team : this.props.team}),\n        };\n        fetch(\"https://modern-fantasy.herokuapp.com/draft\", requestOptions)\n            .then(res => res.text())\n            .then(text => console.log('Updated player with id ' + text))\n            .catch(error => console.log(error));\n        this.setState({\n            isDrafted: !currentIsDrafted,\n        })\n        this.props.draft(this.props.info.playerid);\n    }\n\n\n    render() {\n\n        let text = \"Draft\";\n        let check = \"\";\n        if (this.state.isDrafted) {\n            text = \"Undo\";\n            check = \"âœ“\";\n        }\n        let buttonclass = \"button \" + text\n        return <tr className=\"playerRow\">\n            <td>{this.props.info.playerid}</td>\n            <td>{this.props.info.playername}</td>\n            <td>{this.props.info.pos}</td>\n            <td>{this.props.info.team}</td>\n            <td>{this.props.info.school}</td>\n            <td><button\n                onClick={() => this.callAPI()}\n                className={buttonclass}\n            >{text}</button></td>\n            <td>{check}</td>\n        </tr>\n    }\n\n}\n\nexport default Player;","import React from 'react'\n\nclass Header extends React.Component<any, any> {\n\n    constructor(props: any) {\n        super(props);\n    }\n\n    render () {\n        return (\n            <div className=\"Header\">\n                <h1 className=\"title\">Modern Fantasy</h1>\n                <ul className=\"headerList\">\n                    <li className=\"headerItem\"><a className=\"headerContent\">Home</a></li>\n                    <li className=\"headerItem\"><a className=\"headerContent\">Leagues</a></li>\n                    <li className=\"headerItem\"><a className=\"headerContent\">Draft</a></li>\n                    <li className=\"headerItem\"><a className=\"headerContent\">About</a></li>\n                    <li className=\"headerItem\"><a className=\"headerContent\" onClick={this.props.onClick}>New Draft</a></li>\n                </ul>\n            </div>\n        )\n    }\n}\nexport default Header","import React from 'react';\nimport './App.css';\nimport Player from './Player';\nimport PlayerInfo from './PlayerInfo';\nimport Header from './Header'\n\ninterface IProps {\n}\n\ninterface IState {\n  apiResponse: PlayerInfo[];\n  onClock: number;\n  up: boolean;\n  pick: number;\n  teams: number;\n  players: number;\n  results: object;\n}\n\nclass App extends React.Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      apiResponse: [],\n      onClock: 2,\n      up: true,\n      pick: 1,\n      teams: 4,\n      players: 16,\n      results: {}\n    }\n  }\n\n  callAPI() {\n    fetch(\"https://modern-fantasy.herokuapp.com/all\")\n      .then(res => res.json())\n      .then(json => this.setState({ apiResponse: json }));\n  }\n\n  componentDidMount() {\n    this.callAPI();\n  }\n\n  newDraft() {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ isDrafted: false })\n    };\n    fetch('https://modern-fantasy.herokuapp.com/newDraft', requestOptions)\n      .then(res => res.text())\n      .then(text => console.log('New Draft! All players undrafted.'))\n      .catch(error => console.log(error))\n    window.location.reload()\n  }\n\n  draft(player) {\n    let results = this.state.results[this.state.onClock];\n    if (!results) {\n      this.state.results[this.state.onClock] = [];\n    } else {\n      this.state.results[this.state.onClock].push(player)\n    }\n    this.setState({pick : this.state.pick + 1})\n\n    if (this.state.pick <= this.state.players * this.state.teams) {\n      if (this.state.pick % this.state.teams === 0) {\n        this.setState({ up: !this.state.up })\n      }\n      else if (this.state.up) {\n        this.setState({ onClock: this.state.onClock + 1 })\n      }\n      else {\n        this.setState({ onClock: this.state.onClock - 1 })\n      }\n    }\n  }\n\n\n\n\n  render() {\n\n    const sortedList: PlayerInfo[] = this.state.apiResponse.sort(\n      function (a: PlayerInfo, b: PlayerInfo) { return a.playerid - b.playerid });\n\n    return (\n      <div className=\"App\">\n        <Header onClick={() => this.newDraft()} />\n        <h1>Pick{this.state.pick},team{this.state.onClock} on clock</h1>\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Position</th>\n              <th>Team</th>\n              <th>College</th>\n              <th>Draft</th>\n            </tr>\n            {sortedList.map((value: PlayerInfo, index: number) => {\n              return <Player key={index} info={value} draft={this.draft.bind(this)} \n                             team={this.state.onClock}/>\n            })}\n          </tbody>\n        </table>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Header from './Header';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}